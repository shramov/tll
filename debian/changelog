tll (0.4.3) unstable; urgency=medium

  * channel: Add policy to control direction parameter
  * config: Increase severity of value/subtree error
  * control: Do not append missing domain name
  * convert: Do not init conversions that are not needed
  * null: Export client url for resolve
  * processor: Deprecate url subtree in config
  * scheme: Fix copy function that corrupts object with imports
  * stream: Fix missing EndOfBlock before Online

 -- Pavel Shramov <shramov@mexmat.net>  Mon, 06 Oct 2025 13:14:12 +0300

tll (0.4.2) unstable; urgency=medium

  * blocks: Fix (unlikely) fd leak when on block write
  * channel: Copy flags in tll_msg_copy_info function
  * config: Fix segfault when loading emtpy config 'yamls+gz://'
  * convert: Do not convert non-data messages
  * file: Split TempFile into util headers
  * memoryview: Return const pointer for immutable buffer
  * meson: Generate version header
  * processor:
    Include Suspend flag for channels in StateUpdate
    Report compile time version
    Set default pending steps to 8
  * python:
    Call dlclose after reloading python
    Check if message exists in scheme
  * ring: Fix data races on arm64 when using as pub-sub
  * rotate: Autoseq mode
  * scheme:
    Do not include 'options: {}' in dump
    Import list in the API
    Support const types for immutable buffers in binder
    Support list copy in binder
  * schemegen: Add option to skip channel open
  * stream:
    Do not export storage reader config
    Message size limit
    New Request message from client
    Report begin of block
  * templates: Copy function for messages and fix incorrect const submessage getter
  * tll: Bunch of cleanups found by coverity/clang-tidy
  * util:
    Add from/into helpers to FixedPoint
    Fix incorrect return value from nonblock helper
    Initialize whole tll_msg_t structure in OwnedMessage
    Split std::expected backport into compat headers
    Trivial implementation of std::jthread
  * worker: Do not handle messages in inactive state
  * yaml: Emulate control scheme of known channels

 -- Pavel Shramov <shramov@mexmat.net>  Wed, 24 Sep 2025 13:37:36 +0300

tll (0.4.1) unstable; urgency=medium

  * config: Clear parent when child node is removed
  * file:
    Exact or block last seq mode
    Lock file for writing
  * hostport: Port field is required for IP addresses
  * python:
    Ensure that all callbacks are noexcept, compatibility with cython3
    Async implementation based on asyncio
  * resolve: Always request parameters from server (optional)
  * scheme:
    Fix incorrect bitfield set macro
    Include unknown bits in message dump
  * spdlog: Fix path of format setting
  * stream: Pass open parameters and post flags to child channels
  * templates: Fix bits type name in cpp template #16

 -- Pavel Shramov <shramov@mexmat.net>  Fri, 15 Aug 2025 12:45:08 +0300

tll (0.4.0) unstable; urgency=medium

  * bench: Configurable logging level for channel
  * channel:
    Helper function for state changes
    Move state checks into common C code for open/close calls
    State change counter in common structure
  * config: Add missing tll_config_value_dup symbol export
  * file:
    New version of file format suitable for parallel reads
    Change default IO to mmap
    Open modes, last message or new data
  * logger:
    Add terminating null for async log message
    Provide stat with number of log messages
    Use kqueue when available to wake thread
  * processor: Configurable number of extra pending steps
  * python:Reopen helper
  * rotate: Fix incorrect last file check

 -- Pavel Shramov <shramov@mexmat.net>  Wed, 02 Jul 2025 12:29:47 +0300

tll (0.3.8) unstable; urgency=medium

  * file: Check version from meta
  * channel: Do not call close from destroy in C++ API

 -- Pavel Shramov <shramov@mexmat.net>  Fri, 27 Jun 2025 15:35:01 +0300

tll (0.3.7) unstable; urgency=medium

  * channel: Expose scheme with user-defined tag
  * control: Export flags for Channels, fix duplicate updates
  * convert: Conversion subsystem
  * prefix: Policy to control state change and prefix+proto:// exports
  * processor: Basic stages implementation
  * pub: Pass last known seq to client
  * python:
    Check fixed point field limits
    Control fields that are converted in as_dict
    Fix incorrect impl initialization in derived channels
  * rate: Strip rate+ prefix from client parameters
  * resolve: Convert messages to requested scheme
  * rotate: Convert data to common scheme
  * scheme: Improve scheme comparison functions
  * stream: Use maximum seq from online and restore channels
  * tcp: Force recv buffer shift on recv when there is no space left
  * timeit: Do not export timeit+ prefix into resolve

 -- Pavel Shramov <shramov@mexmat.net>  Wed, 28 May 2025 15:57:03 +0300

tll (0.3.6) unstable; urgency=medium

  * channel: Impl version field
  * stream: Describe resolve exports in manpage
  * tcp: Fix recently broken async client connect

 -- Pavel Shramov <shramov@mexmat.net>  Sun, 09 Mar 2025 15:19:39 +0300

tll (0.3.5) unstable; urgency=medium

  * bits: Allow both | and , separatros when parsing
  * channel: Add logs for suspend/resume
  * direct: Check for duplicate slaves
  * file:
    Do not allocate write lz4 buffers in read mode
    Use delta seq in recompression
  * filter: Filter stream based on message id
  * logger: Async mode: write logs in separate thread
  * python:
    Clear old messages when waiting for object state in mock
    Fix typo in TimePoint.__lt__
    Fix buch of Config functions
    Make post policy compatible with C++
    Missing check for out of string accesses in scheme messages
  * rotate:
    Do not change ctime/mtime of old files
    Use last available scheme and force rotate when opened with new one
  * scheme: Report unknow resolution for time fields as error
  * stat: Blocking acquire variant
  * stream:
    Drain pending data from online channel
    Drop hardcoded dump parameter from blocks
    Export last seq in config for client
    Incorrect open parameter when feeding empty blocks
  * tcp:
    Clarify sndbuf/send-buffer-size difference in manpage
    Export local and remote host/port in config
  * yaml: Set time field in messages

 -- Pavel Shramov <shramov@mexmat.net>  Tue, 04 Mar 2025 16:45:05 +0300

tll (0.3.4) unstable; urgency=medium

  * resolve: Export of TCP based channels with * address,
    it is replaced in control and can be tweaked later on client
  * processor: Clear pending event on state change
  * python: Rename tll-channel-python to tll-python
  * reopen: Add tests for internal reopen structure
  * scheme: Sort global enums/bits/unions
  * stream: Check that block end can not be in the future
  * stream: Report end of block in client
  * tcp:
    Source client address
    Support host subtree
  * tests: Close tcp channels in teardown
  * udp: Use separate host and port variables
  * util: Support getT<std::optional<T>> for complex getters

 -- Pavel Shramov <shramov@mexmat.net>  Thu, 12 Dec 2024 13:35:42 +0300

tll (0.3.3) unstable; urgency=medium

  * binder: Fix incorrect entity size for legacy short lists
  * resolve: Export child channels
  * file: Properly init lz4 structures in append mode
  * prefix:
    Configurable export of child info config
    Store child config under fixed name 'child'
  * processor: Expose worker loop statistics in channel
  * python:
    Copy of const Config should be mutable
    Export child info config in python prefix
  * rate: Multiple buckets in one channel and per-message rate mode
  * stream: Export online and request child channels

 -- Pavel Shramov <shramov@mexmat.net>  Fri, 29 Nov 2024 14:46:32 +0300

tll (0.3.2) unstable; urgency=medium

  * channel:
      Add TLL_POST_URGENT post flag
      Change channel module function name
      Emit warning when child is added but no Parent cap is set
      Log meta into on failed post
      Move init log message into common code
  * direct:
      Change sibling state
      Better race condition prevention
      Manual open mode with delayed Active
  * file:
      Add access-mode parameter
      Fix invalid check for frame size
  * logger: List notation of node levels
  * mem: Check that master channel is active in slave open
  * pub: Check that incoming message fits into the buffer
  * python:
      Add Urgent post flag
      Allow None values in open/init keyword parameters
      Allow union_field.field_name access
      Config.set(key, None) is equivalent to remove(key)
      Fix destruction of partially initialized Mock object
      Support pointers with large item size
  * rate: Support urgent post flag
  * ring: Reject messages greater then buffer size / 2 (fixes #14)
  * rotate: Configurable filename key
  * schemegen: Report error when scheme is not available in channel
  * scheme:
      Add options to inlined fields
      Handle entity size in front of the list
      Hide secret fields in dump
      Set count-type options for arrays if needed
      Support lists with large items in binder, json and yaml
  * stat: Skip empty stat entries
  * stream: Fill initialization message body
  * tcp: Fix misleading Connected log message
  * templates:
      Fix incorrect handling of global bits in cpp template
      Use explicit offset_{f.name} variable for offsets in cpp-binder
  * udp: Last tx/rx seq in stat page
  * yaml:
      Clear Process and Pending caps when done
      Split encoder into library header

 -- Pavel Shramov <shramov@mexmat.net>  Wed, 20 Nov 2024 12:23:54 +0300

tll (0.3.1) unstable; urgency=medium

  * bench:
    Do not depend on conv framework in benchmarks
    Switch to monotonic clock
  * config: Check for broken link in Config::get()
  * doc: Describe build process
  * logger:
    Compatibility with fmtlib 10
    Include thread name in log messages
  * processor:
    Set name for worker thread
  * python:
    Include open parameters in the log
    Make Base._close behave same as C++ Base::_close
    Migrate from distutils to setuptools
    Use importlib instead of pkg_resources
  * resolve:
    Fix disconnect cleanup
    Incorrect state when channel is closed too early
  * rtt: Logic to measure round trip times
  * scheme: Warn about optional fiels without pmap
  * tests: Make tests less linux-specifi
  * timeline: Reproduce time delays in data stream
  * util: Do not use conv::to_string for std::chrono::duration

 -- Pavel Shramov <shramov@mexmat.net>  Thu, 29 Aug 2024 21:05:57 +0300

tll (0.3.0) unstable; urgency=medium

  * channel:
    Move flag field in tll_msg_t
    Rename 'url' to 'init' in config
    Split scheme load helper function
    Thread safe context operations
    Use atomic counter for channels without name
  * docs: Stream client and server manpages
  * file: Override scheme with init parameters
  * json: Default message for decoding
  * logger: Fix race condition on logger init/free
  * prefix: Prefix scheme policy
  * processor:
    Configurable scheme search path
    Open timeout check
  * python:
    Allow using pathlib.Path as string parameter
    Close/destroy functions for processor mock
    Expose scheme search path API
    Rename 'url' to 'init' in config
  * refptr:
    Explicit memory ordering for counter operations
    Make refptr::reset compatible with std pointers
  * reopen: Open timeout check
  * resolve: Enable child scheme override
  * rotate:
    Emit Rotate control message on file change
    Store scheme on open
  * scheme: Search path manipulation functions
  * stat: Add timestamp field
  * stream: Add storage and blocks channels as childs

 -- Pavel Shramov <shramov@mexmat.net>  Fri, 05 Jul 2024 13:51:28 +0300

tll (0.2.2) unstable; urgency=medium

  * config: Compilation issues on ubuntu 24.04
  * control: Add Ping/Pong messages
  * control: Add version into Hello message
  * control: Send Hello on uplink connect
  * file:
      Write mode for using mmap IO
      LZ4 block compression
  * logger: Check if new impl is same as already registered
  * python:
      Fix cython deprecation warning
      Setting field in the message to None is same as deleting it
      Better conversion of TimePoint values in scheme messages
  * resolve: Fix disconnect exception in logic
  * stream: Optional rotation on Block messages
  * tcp: Configurable high watermark

 -- Pavel Shramov <shramov@mexmat.net>  Fri, 24 May 2024 16:50:35 +0300

tll (0.2.1) unstable; urgency=medium

  * channel:
      Drop DLOPEN_GLOBAL flag from channel module
      Show address in dumps only when it's not zero
  * debian: Update symbols file
  * ipc: Inherit scheme from server if not set
  * processor: Set scheme for ipc channel
  * pub: Handle send errors
  * python:
      Reload python library with RTLD_GLOBAL and only on initialization
  * resolve:
      Make service and channel arguments optional
      Support wildcard requests
  * stat:
      Include log message before page dump
      Incorrect average in integer groups
      Replace missing min/max values with '-'
  * tcp:
      Cleanup closed sockets in process
      Fix memory leak in tcp server
      Handle send errors
      Use seq in client address so reconnected client has unique addr

 -- Pavel Shramov <shramov@mexmat.net>  Mon, 15 Apr 2024 08:35:49 +0300

tll (0.2.0) unstable; urgency=medium

  * channel:
    Internal structure versioning
    Add reserved space in tll_msg_t structure
    Add logger field to internal structure
    Move dump into common C code
    Better C++ callback support
    Check for duplicate channel names
    Use different automatic channel names
  * config:
    Better C++ callback support
    Handle errors with broken links (#10)
    Warn about deprecated config format
  * control: Fix incorrect check for channel lists
  * quantile: Fix incorrect check for channel lists
  * direct: Inherit data and control scheme from master
  * doc: Bunc of manpages
  * examples: Resolve server and client configs
  * file:
    File implementation protocol is based on IO
    Set Pending cap on successful read
    Use cached scheme load
  * logger: Access tll_logger_t pointer in C++ Logger
  * mem: Fix ignored message type in full frame mode
  * network: Add resolve member function to hostport
  * processor: Fail on string open parameters
  * pub: Include peer name in logs
  * pub+mem: Publish-subscribe channel over shared memory
  * python:
    Add resolve client script
    Improved chrono types, basic math, comparison and string conversion
    Correct order of channel destruction in mock helper
    Do not pack presence map field
    Use logger and dump fields in channel internal structure
  * resolve: Short form of service/channel parameters
  * ring:
    C++ implementation compatible with C ring
    Drop buffer pointer from ring structure
    Fix iterator race in full ring
    More effective offset wrapping
    Use atomics in C implementation
  * scheme: Add reserved space
  * schemegen: Create directories for output file
  * scheme: Incorrect formatting of large bit fields
  * stream:
    Check for -1/-1 values in block seq reports
    Fix bunch errors that make client stuck without data and any error messages
    Fix invalid log message when requesting block
  * tcp:
    Basic SCTP support
    Support ephemeral ports
  * udp: Split common code
  * yaml: Fix ignored message mask for control messages

 -- Pavel Shramov <shramov@mexmat.net>  Thu, 04 Apr 2024 15:12:09 +0300

tll (0.1.1) unstable; urgency=medium

  * channel:
    Add reserved field to tll_channel_internal_t structure
    tll_channel_internal_init zeroes all but reserved fields
    Force close in tll_channel_free, prepare to remove from Channel::free later
  * python: Remove close from Channel.free function
  * logger: Compatibilty with fmtlib 10+ and C++20
  * scheme: Do not overwrite outer options on import

 -- Pavel Shramov <shramov@mexmat.net>  Thu, 08 Feb 2024 11:35:42 +0300

tll (0.1.0) unstable; urgency=medium

  * First usable tagged version

 -- Pavel Shramov <shramov@mexmat.net>  Wed, 24 Jan 2024 08:40:14 +0300

tll (0.0.0) unstable; urgency=medium

  * Initial release.

 -- Pavel Shramov <shramov@mexmat.net>  Sat, 16 May 2020 09:18:42 +0300
